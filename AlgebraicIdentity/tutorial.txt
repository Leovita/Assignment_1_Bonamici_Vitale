//opt/homebrew/Cellar/llvm/19.1.7_1/include

compilare il passo:
    clang++ -fPIC -shared -o build/StrengthReduction.so AlgebraicIdentity.cpp `llvm-config --cxxflags --ldflags --system-libs --libs core`

c to ll no opt: 
    clang -Xclang -disable-O0-optnone -S -emit-llvm -O0 prova.c -o prova.ll
rimuovi load/store:
    opt -p mem2reg prova.ll -o prova.m2r.bc
disasseblare bc:
    llvm-dis prova.m2r.bc -o file.m2r.ll

applicare il pass e generare i file ottimizzati:
    opt -load-pass-plugin=build/AlgebraicIdentity.so -passes="nome-pass" test/test.ll -o test/output.optimized.bc

Convertiamo poi il bitcode ottimizzato in .ll leggibile:
    llvm-dis test/output.optimized.bc -o test/output.optimized.ll
